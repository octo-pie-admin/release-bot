name: Release Bot

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout consumer repository
        uses: actions/checkout@v4

      - name: AI-Release-Bot
        id: local_step
        uses: octo-pie-admin/release-bot@main
        with:
          github_token: ${{ secrets.TOKEN_GITHUB }}
          llm_model: ${{ secrets.LLM_MODEL }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          release_tag: ${{ github.event.release.tag_name || 'latest' }}
          openapi_file: ${{ secrets.OPENAPI_FILE }}
          output_format: ${{ secrets.OUTPUT_FORMAT || 'mkdocs' }}

      - name: Save generated blog post
        run: |
          mkdir -p docs/releases/
          VERSION=${{ github.event.release.tag_name }}
          DATE=$(date +'%Y-%m-%d')
          FILE="docs/releases/${DATE}-release-${VERSION}.md"

          echo "${{ steps.local_step.outputs.blog_post }}" | base64 -d > "$FILE"

          echo "Saved release notes to $FILE"

      - name: Commit and push to main
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin main || true
          git checkout main || git checkout -b main origin/main

          # Add new release file(s) under docs/releases/
          git add docs/releases/
          git commit -m "Add release notes for ${{ github.event.release.tag_name }}" || echo "No changes to commit"

          # Rebase onto the latest remote branch to avoid nonâ€“fast-forward push issues
          git pull --rebase origin main || true
          git push origin main
